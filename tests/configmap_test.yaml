suite: test configmap
templates:
  - configmap.yaml
tests:
  - it: should create correct configmap
    set:
      system:
        public_base_url_domain: https://my.domain.example.com
        public_base_context: 'hello/you'
        registration_languages:
          - 'en-US':
              en-US: English
        components:
          attendee_service:
            early_reg_group_id: D2DQEARLYREG
            go_live:
              start_iso_datetime: '2022-01-29T20:00:00+01:00'
              early_reg_start_iso_datetime: '2022-01-14T20:00:00+01:00'
            dues:
              earliest_due_date: '2023-01-01'
              latest_due_date: '2023-09-23'
              due_days: 14
            birthday:
              earliest: '1901-01-01'
              latest: '2004-08-24'
          auth_service:
            admin_group_id: D1DQADM
            admin_group_limit_to_identities:
              - IDPUSERID1
              - IDPUSERID2
            other_group_ids:
              - D2DQEARLYREG
            token_public_keys_PEM:
              - |
                -----BEGIN PUBLIC KEY-----
                ABC
                -----END PUBLIC KEY-----
            allowed_audience_in_tokens: 'aud-1234'
            allowed_issuer_in_tokens: 'https://identity.example.com'
            identity_provider:
              user_info_url: https://my.identity.provider.example.com/user-info
              token_introspection_url: https://my.identity.provider.example.com/token-introspection
              authorization_endpoint: https://my.identity.provider.example.com/auth
              token_endpoint: https://my.identity.provider.example.com/token
              end_session_endpoint: https://my.identity.provider.example.com/logout
              token_request_timeout: 5s
              auth_request_timeout: 600s
            scope: some.scope
            default_dropoff_url: https://example.com/app/
            dropoff_url_pattern: https://example.com/app/(\?(foo=[a-z]+|bar=[0-9]{3,8}|&)+)?
            cookie_domain: example.com
          mail_service:
            dev_mails:
              - developer@example.com
              - another.dev@example.com
            add_auto_bcc: 'debug@example.com'
            from: 'Example Sender <no-reply@example.com>'
            smtp_host: 'mail.example.com'
            smtp_port: 587
        database:
          use: mysql
      choices:
        packages:
          attendance:
            description: 'Entrance Fee (Convention Ticket)'
            price: 12000
            vat_percent: 19
            default: true
            at-least-one-mandatory: true
            visible_for:
              - regdesk
        options:
          art:
            description: 'Artist'
        tshirtsizes:
          - 'XS':
              'en-US': 'XS (Regular Cut)'
        spoken_languages:
          - de:
              en-US: German
          - la:
              en-US: Latin
              de-DE: Latein
        countries:
          - 'US':
              'en-US': 'United States of America'
        additional_info_areas:
          regdesk:
            permissions:
              - regdesk
          sponsordesk:
            permissions:
              - sponsordesk
          shipping:
            self_read: true
            self_write: true
            permissions:
              - sponsordesk

    asserts:
      - isKind:
          of: ConfigMap
      - hasDocuments:
          count: 1
      - equal:
          path: data.regsys-classic-config
          value: |
            # configuration file for regsys-classic
            web:
              server_url: 'https://my.domain.example.com/hello/you/'
              context_path: 'regsys'
              regsys_public_url: 'https://my.domain.example.com/hello/you/register'
              system_language: 'en-US'
            downstream:
              auth_service: 'http://auth-service:8080'
              attendee_service: 'http://attendee-service:8080'
              payment_service: 'http://payment-service:8080'
              mail_service: 'http://mail-service:8080'
              id_token_cookie_name: 'JWT'
              access_token_cookie_name: 'AUTH'
              admin_group: 'D1DQADM'
              # api_token: '$REG_SECRET_API_TOKEN'
              # nosecounter_token: '$REG_SECRET_NOSECOUNTER_TOKEN'
              # dd_token: '$REG_SECRET_DD_TOKEN'
              # artshow_token: '$REG_SECRET_ARTSHOW_TOKEN'
              # boat_token: '$REG_SECRET_BOAT_TOKEN'
              # secu_token: '$REG_SECRET_SECU_TOKEN'
              # secu_secret: '$REG_SECRET_SECU_SECRET'
            testing: {}
            choices:
              flags:
                guest:
                  admin_only: true
                  description: Guest of the Convention
                  visible_for:
                  - self
                skip_ban_check:
                  admin_only: true
                  description: Bypass ban check for this attendee
                terms-accepted:
                  default: true
                  description: Accepted the terms
                  read_only: true
              packages:
                attendance:
                  at-least-one-mandatory: true
                  default: true
                  description: Entrance Fee (Convention Ticket)
                  price: 12000
                  vat_percent: 19
                  visible_for:
                  - regdesk
              options:
                art:
                  description: Artist
            tshirtsizes:
              - XS:
                  en-US: XS (Regular Cut)
            spoken_languages:
              - de:
                  en-US: German
              - la:
                  de-DE: Latein
                  en-US: Latin
            countries:
              - US:
                  en-US: United States of America
            registration_languages:
              - en-US:
                  en-US: English
      - equal:
          path: data.attendee-service-config
          value: |
            # configuration file for attendee-service
            service:
              name: 'Attendee Service'
              regsys_public_url: 'https://my.domain.example.com/hello/you/register'
              payment_service: 'http://payment-service:8080'
              mail_service: 'http://mail-service:8080'
              auth_service: 'http://auth-service:8080'
            server:
              port: 8080
            database:
              use: 'mysql'
              username: 'demouser'
              # password: '$REG_SECRET_DB_PASSWORD'
              database: 'tcp(localhost:3306)/dbname'
              parameters:
                - 'charset=utf8mb4'
                - 'collation=utf8mb4_general_ci'
                - 'parseTime=True'
                - 'timeout=30s'
            security:
              fixed_token: {}
                # api: '$REG_SECRET_API_TOKEN'
              oidc:
                id_token_cookie_name: 'JWT'
                access_token_cookie_name: 'AUTH'
                token_public_keys_PEM:
                - |
                  -----BEGIN PUBLIC KEY-----
                  ABC
                  -----END PUBLIC KEY-----
                admin_group: 'D1DQADM'
                early_reg_group: 'D2DQEARLYREG'
                audience: 'aud-1234'
                issuer: 'https://identity.example.com'
              cors:
                disable: false
              require_login_for_reg: true
            logging:
              severity: INFO
              style: ecs
            go_live:
              start_iso_datetime: '2022-01-29T20:00:00+01:00'
              early_reg_start_iso_datetime: '2022-01-14T20:00:00+01:00'
            dues:
              earliest_due_date: '2023-01-01'
              latest_due_date: '2023-09-23'
              due_days: 14
            birthday:
              earliest: '1901-01-01'
              latest: '2004-08-24'
            additional_info_areas:
              regdesk:
                permissions:
                - regdesk
              shipping:
                permissions:
                - sponsordesk
                self_read: true
                self_write: true
              sponsordesk:
                permissions:
                - sponsordesk
            choices:
              flags:
                guest:
                  admin_only: true
                  description: Guest of the Convention
                  visible_for:
                  - self
                skip_ban_check:
                  admin_only: true
                  description: Bypass ban check for this attendee
                terms-accepted:
                  default: true
                  description: Accepted the terms
                  read_only: true
              packages:
                attendance:
                  at-least-one-mandatory: true
                  default: true
                  description: Entrance Fee (Convention Ticket)
                  price: 12000
                  vat_percent: 19
                  visible_for:
                  - regdesk
              options:
                art:
                  description: Artist
            tshirtsizes:
              - XS
            spoken_languages:
              - de
              - la
            registration_languages:
              - en-US
            countries:
              - US
      - equal:
          path: data.auth-service-config
          value: |
            # configuration file for auth-service
            service:
              name: 'Auth Service'
              # external url of my own "dropoff" endpoint. This must match the OAuth2 redirect_url setting on each client
              dropoff_endpoint_url: 'https://my.domain.example.com/hello/you/authsrv/v1/dropoff'
            server:
              port: 8080
            security:
              oidc:
                id_token_cookie_name: 'JWT'
                access_token_cookie_name: 'AUTH'
                relevant_groups:
                  admin:
                    - '123456789'
                  earlyReg: []
                token_public_keys_PEM:
                - |
                  -----BEGIN PUBLIC KEY-----
                  ABC
                  -----END PUBLIC KEY-----
                user_info_url: 'https://my.identity.provider.example.com/user-info'
                user_info_cache_seconds: 10
                token_introspection_url: 'https://my.identity.provider.example.com/token-introspection'
                audience: 'aud-1234'
                issuer: 'https://identity.example.com'
              cors:
                disable: false
                insecure_cookies: false
                disable_http_only_cookies: false
            logging:
              severity: INFO
            identity_provider:
              authorization_endpoint: 'https://my.identity.provider.example.com/auth'
              token_endpoint: 'https://my.identity.provider.example.com/token'
              end_session_endpoint: 'https://my.identity.provider.example.com/logout'
              token_request_timeout: 5s
              auth_request_timeout: 600s
            application_configs:
              registration-system:
                display_name: Registration System
                scope: 'some.scope openid email groups profile'
                # client_id: '$REG_SECRET_OIDC_CLIENT_ID'
                # client_secret: '$REG_SECRET_OIDC_CLIENT_SECRET'
                default_dropoff_url: 'https://example.com/app/'
                dropoff_url_pattern: 'https://example.com/app/(\?(foo=[a-z]+|bar=[0-9]{3,8}|&)+)?'
                cookie_name: 'JWT'
                cookie_domain: 'example.com'
                cookie_path: '/hello/you'
                cookie_expiry: '6h'
      - equal:
          path: data.mail-service-config
          value: |
            # configuration file for mail-service
            server:
              port: 8080
            mail:
              log_only: false
              dev_mode: false
              dev_mails:
                - developer@example.com
                - another.dev@example.com
              add_auto_bcc: 'debug@example.com'
              from: 'Example Sender <no-reply@example.com>'
              # from_password: '$REG_SECRET_SMTP_PASSWORD' # or blank for no password
              smtp_host: 'mail.example.com'
              smtp_port: '587'
            database:
              use: 'mysql'
              username: 'demouser'
              # password: '$REG_SECRET_DB_PASSWORD'
              database: 'tcp(localhost:3306)/dbname'
              parameters:
                - 'charset=utf8mb4'
                - 'collation=utf8mb4_general_ci'
                - 'parseTime=True'
                - 'timeout=30s'
            security:
              fixed_token: {}
                # api: '$REG_SECRET_API_TOKEN'
              oidc:
                id_token_cookie_name: 'JWT'
                access_token_cookie_name: 'AUTH'
                token_public_keys_PEM:
                - |
                  -----BEGIN PUBLIC KEY-----
                  ABC
                  -----END PUBLIC KEY-----
                admin_group: 'D1DQADM'
                auth_service: 'http://auth-service:8080'
                audience: 'aud-1234'
                issuer: 'https://identity.example.com'
              cors:
                disable: false
            logging:
              severity: INFO
              style: ecs

      - equal:
          path: data.payment-cncrd-adapter-config
          value: |
            # configuration file for payment-cncrd-adapter
            service:
              name: 'Registration Concardis Adapter'
              # my own public URL, needed if you want the simulator to generate valid paylinks, leave unset for the very basic mock used in unit tests
              # setting is completely ignored if you set concardis_downstream, because that turns off the simulator completely
              public_url: 'http://localhost:10000/cncrdsrv' # do not add trailing /
              # base url of the attendee service, leave blank to use simple in-memory simulator (not useful for production)
              attendee_service: 'http://localhost:9091' # do not add trailing /
              # base url of the mail service, leave blank to use simple in-memory simulator (not useful for production)
              mail_service: 'http://localhost:9093' # no trailing slash
              # base url of the payment service, leave blank to use simple in-memory simulator (not useful for production)
              payment_service: 'http://localhost:9092' # do not add trailing /
              # base url for the concardis downstream, leave blank to use the local simulator (should set public_url or generated paylinks will not work)
              # concardis_downstream: 'https://api.pay-link.eu'
              concardis_instance: 'demo'
              concardis_api_secret: 'demosecret'
              # if set, will add these redirects to the request for the paylink
              success_redirect: 'http://localhost:10000/app/register'
              failure_redirect: 'http://localhost:10000/app/register'
            server:
              port: 9097
            logging:
              severity: INFO
              # switch to true to log ALL communication from/to the payment provider (only signatures omitted)
              full_requests: false
              # set this to receive error notification mails if unexpected interaction with the payment provider occurs
              # error_notify_mail: nobody@example.com
            security:
              fixed_token:
                api: 'put_secure_random_string_here_for_api_token'
                webhook: 'put_secure_random_string_here_for_webhook'
              cors:
                # set this to true to send disable cors headers - not for production - local/test instances only - will log lots of warnings
                disable: false
                # if setting disable_cors, you should also specify this
                allow_origin: 'http://localhost:8000'
            invoice:
              title: Time Traveller Con 1969 Edition - Attendee Fee
              description: |
                Fee for attending Time Traveller Con 1969 Edition
                from July 17th to 22nd 1969, including all selected options.
                Accomodation and catgering will have been provided.
              purpose: Payment of entrance fee and options.

      - equal:
          path: data.payment-service-config
          value: |
            # configuration file for payment-service
            service:
              name: 'Registration Payment Service'
              attendee_service: 'http://localhost:9091' # do not include trailing slash
              provider_adapter: 'http://localhost:9097' # do not include trailing slash
              transaction_id_prefix: "EF2023"
              allowed_currencies:
                - 'EUR'
              payment_default_comment: 'manually initiated credit card payment'
            server:
              port: 9092
              read_timeout_seconds: 30
              write_timeout_seconds: 30
              idle_timeout_seconds: 120
            database:
              use: mysql #or inmemory
              username: 'demouser'
              password: 'demopw'
              database: 'tcp(localhost:3306)/dbname'
              parameters:
                - 'charset=utf8mb4'
                - 'collation=utf8mb4_general_ci'
                - 'parseTime=True'
                - 'timeout=30s' # connection timeout
            security:
              fixed_token:
                api: 'put_secure_random_string_here_for_api_token'
              oidc:
                # set this nonempty to also try to read the jwt token from a cookie (Authorization header with Bearer token is always tried)
                id_token_cookie_name: 'JWT'
                access_token_cookie_name: 'AUTH'
                # a list of public RSA keys in PEM format, see https://github.com/Jumpy-Squirrel/jwks2pem for obtaining PEM from openid keyset endpoint
                # this is held locally so token validation can be done locally, especially on local installations that do not actually have an IDP.
                token_public_keys_PEM:
                  - |
                    -----BEGIN PUBLIC KEY-----
                    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnzyis1ZjfNB0bBgKFMSv
                    vkTtwlvBsaJq7S5wA+kzeVOVpVWwkWdVha4s38XM/pa/yr47av7+z3VTmvDRyAHc
                    aT92whREFpLv9cj5lTeJSibyr/Mrm/YtjCZVWgaOYIhwrXwKLqPr/11inWsAkfIy
                    tvHWTxZYEcXLgAXFuUuaS3uF9gEiNQwzGTU1v0FqkqTBr4B8nW3HCN47XUu0t8Y0
                    e+lf4s4OxQawWD79J9/5d3Ry0vbV3Am1FtGJiJvOwRsIfVChDpYStTcHTCMqtvWb
                    V6L11BWkpzGXSW4Hv43qa+GSYOD2QU68Mb59oSk2OB+BtOLpJofmbGEGgvmwyCI9
                    MwIDAQAB
                    -----END PUBLIC KEY-----
                  - |
                    -----BEGIN PUBLIC KEY-----
                    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu1SU1LfVLPHCozMxH2Mo
                    4lgOEePzNm0tRgeLezV6ffAt0gunVTLw7onLRnrq0/IzW7yWR7QkrmBL7jTKEn5u
                    +qKhbwKfBstIs+bMY2Zkp18gnTxKLxoS2tFczGkPLPgizskuemMghRniWaoLcyeh
                    kd3qqGElvW/VDL5AaWTg0nLVkjRo9z+40RQzuVaE8AkAFmxZzow3x+VJYKdjykkJ
                    0iT9wCS0DRTXu269V264Vf/3jvredZiKRkgwlL9xNAwxXFg0x/XFw005UWVRIkdg
                    cKWTjpBP2dPwVZ4WWC+9aGVd+Gyn1o0CLelf4rEjGoXbAAEgAqeGUxrcIlbjXfbc
                    mwIDAQAB
                    -----END PUBLIC KEY-----
                admin_group: 'admin'
                # if you leave this blank, userinfo checks will be skipped
                auth_service: 'http://localhost:4712' # no trailing slash
                # optional, but will be checked if set (should set to reject tokens created for other clients than regsys)
                audience: 'only-allowed-audience-in-tokens'
                # optional, but will be checked if set
                issuer: 'only-allowed-issuer-in-tokens'
              cors:
                # set this to true to send disable cors headers - not for production - local/test instances only - will log lots of warnings
                disable: false
                # if setting disable_cors to true, you should also specify this, as a comma separated list of allowed origins
                allow_origin: 'http://localhost:8000'
            logging:
              severity: INFO
              style: plain # or ecs (elastic common schema), the default

  - it: should not set namespace if unset
    set:
      system:
        registration_languages:
          - 'en-US':
              en-US: English
        components:
          attendee_service:
            go_live:
              start_iso_datetime: '2022-01-29T20:00:00+01:00'
            dues:
              earliest_due_date: '2023-01-01'
              latest_due_date: '2023-09-23'
            birthday:
              latest: '2004-08-24'
          auth_service:
            identity_provider:
              user_info_url: https://my.identity.provider.example.com/user-info
              token_introspection_url: https://my.identity.provider.example.com/token-introspection
      choices:
        packages:
          attendance:
            description: 'a'
        options:
          art:
            description: 'art'
        tshirtsizes:
          - 'XS':
              'en-US': 'XS'
        spoken_languages:
          - de:
              en-US: German
        countries:
          - 'US':
              'en-US': 'United States of America'
    asserts:
      - notExists:
          path: metadata.namespace

  - it: should set namespace if specified
    set:
      global:
        namespace: hellospace
      system:
        registration_languages:
          - 'en-US':
              en-US: English
        components:
          attendee_service:
            go_live:
              start_iso_datetime: '2022-01-29T20:00:00+01:00'
            dues:
              earliest_due_date: '2023-01-01'
              latest_due_date: '2023-09-23'
            birthday:
              latest: '2004-08-24'
          auth_service:
            identity_provider:
              user_info_url: https://my.identity.provider.example.com/user-info
              token_introspection_url: https://my.identity.provider.example.com/token-introspection
      choices:
        packages:
          attendance:
            description: 'a'
        options:
          art:
            description: 'art'
        tshirtsizes:
          - 'XS':
              'en-US': 'XS'
        spoken_languages:
          - de:
              en-US: German
        countries:
          - 'US':
              'en-US': 'United States of America'
    asserts:
      - equal:
          path: metadata.namespace
          value: hellospace
