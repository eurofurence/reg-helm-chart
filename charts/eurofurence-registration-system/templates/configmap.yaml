apiVersion: v1
kind: ConfigMap
metadata:
  name: regsys-cm
  {{- with .Values.global.namespace }}
  namespace: '{{ . }}'
  {{- end }}
data:
  {{- $public_base_url := ternary .Values.system.public_base_url_domain (printf "%s/%s" .Values.system.public_base_url_domain .Values.system.public_base_context) (empty .Values.system.public_base_context) }}
  regsys-classic-config: |
    # configuration file for regsys-classic
    web:
      server_url: '{{ $public_base_url }}/'
      context_path: '{{ .Values.system.components.regsys_classic.context_path }}'
      regsys_public_url: '{{ .Values.system.public_login_url }}'
      {{- range (index .Values.system.registration_languages 0) }}
      {{-   range $key, $value := . }}
      system_language: '{{ $key }}'
      {{-   end }}
      {{- end }}
    downstream:
      auth_service: '{{ .Values.system.components.auth_service.local_base_url }}'
      attendee_service: '{{ .Values.system.components.attendee_service.local_base_url }}'
      payment_service: '{{ .Values.system.components.payment_service.local_base_url }}'
      mail_service: '{{ .Values.system.components.mail_service.local_base_url }}'
      id_token_cookie_name: '{{ .Values.system.components.auth_service.id_token_cookie_name }}'
      access_token_cookie_name: '{{ .Values.system.components.auth_service.access_token_cookie_name }}'
      admin_group: '{{ .Values.system.components.auth_service.admin_group_id }}'
      # api_token: '$REG_SECRET_API_TOKEN'
      # nosecounter_token: '$REG_SECRET_NOSECOUNTER_TOKEN'
      # dd_token: '$REG_SECRET_DD_TOKEN'
      # artshow_token: '$REG_SECRET_ARTSHOW_TOKEN'
      # boat_token: '$REG_SECRET_BOAT_TOKEN'
      # secu_token: '$REG_SECRET_SECU_TOKEN'
      # secu_secret: '$REG_SECRET_SECU_SECRET'
    {{- with .Values.system.components.regsys_classic.sepa }}
    sepa:
      account_owner: '{{ .account_owner }}'
      bank_name: '{{ .bank_name }}'
      bank_address: '{{ .bank_address }}'
      iban: '{{ .iban }}'
      bic: '{{ .bic }}'
      subject_prefix: '{{ .subject_prefix }}'
      success_redirect: '{{ $public_base_url }}/app/register'
      failure_redirect: '{{ $public_base_url }}/app/register'
    {{- end }}
    choices:
      flags:
        {{- .Values.choices.flags | toYaml | nindent 8 }}
      packages:
        {{- .Values.choices.packages | toYaml | nindent 8 }}
      options:
        {{- .Values.choices.options | toYaml | nindent 8 }}
    tshirtsizes:
      {{- .Values.choices.tshirtsizes | toYaml | nindent 6 }}
    spoken_languages:
      {{- .Values.choices.spoken_languages | toYaml | nindent 6 }}
    countries:
      {{- .Values.choices.countries | toYaml | nindent 6 }}
    registration_languages:
      {{- .Values.system.registration_languages | toYaml | nindent 6 }}

  attendee-service-config: |
    # configuration file for attendee-service
    service:
      name: 'Attendee Service'
      regsys_public_url: '{{ .Values.system.public_login_url }}'
      {{- if .Values.system.components.payment_service.enable }}
      payment_service: '{{ .Values.system.components.payment_service.local_base_url }}'
      {{- end }}
      {{- if .Values.system.components.mail_service.enable }}
      mail_service: '{{ .Values.system.components.mail_service.local_base_url }}'
      {{- end }}
      {{- if .Values.system.components.auth_service.enable }}
      auth_service: '{{ .Values.system.components.auth_service.local_base_url }}'
      {{- end }}
    server:
      port: 8080
    database:
      use: '{{ .Values.system.database.use }}'
      {{- if eq .Values.system.database.use "mysql" }}
      username: '{{ .Values.system.database.username }}'
      # password: '$REG_SECRET_DB_PASSWORD'
      database: '{{ .Values.system.database.database }}'
      {{-   with .Values.system.database.parameters }}
      parameters:
        {{- range . }}
        - '{{ . }}'
        {{- end }}
      {{-   end }}
      {{- end }}
    security:
      fixed_token: {}
        # api: '$REG_SECRET_API_TOKEN'
      oidc:
        id_token_cookie_name: '{{ .Values.system.components.auth_service.id_token_cookie_name }}'
        access_token_cookie_name: '{{ .Values.system.components.auth_service.access_token_cookie_name }}'
        {{- with .Values.system.components.auth_service.token_public_keys_PEM }}
        token_public_keys_PEM: {{- . | toYaml | nindent 8 }}
        {{- end }}
        admin_group: '{{ .Values.system.components.auth_service.admin_group_id }}'
        {{- with .Values.system.components.attendee_service.early_reg_group_id }}
        early_reg_group: '{{ . }}'
        {{- end }}
        {{- with .Values.system.components.auth_service.allowed_audience_in_tokens }}
        audience: '{{ . }}'
        {{- end }}
        {{- with .Values.system.components.auth_service.allowed_issuer_in_tokens }}
        issuer: '{{ . }}'
        {{- end }}
      cors:
        disable: {{ .Values.development.cors.disable }}
        {{- with .Values.development.cors.allow_origin }}
        allow_origin: '{{ . }}'
        {{- end }}
      require_login_for_reg: {{ .Values.system.components.attendee_service.require_login_for_reg }}
      find_api_access: {{- .Values.choices.find_api_access | toYaml | nindent 8 }}
    logging:
      severity: {{ .Values.system.logging.severity }}
      style: {{ .Values.system.logging.style }}
    go_live:
      start_iso_datetime: '{{ .Values.system.components.attendee_service.go_live.start_iso_datetime }}'
      {{- with .Values.system.components.attendee_service.go_live.early_reg_start_iso_datetime }}
      early_reg_start_iso_datetime: '{{ . }}'
      {{- end }}
    dues:
      earliest_due_date: '{{ .Values.system.components.attendee_service.dues.earliest_due_date }}'
      latest_due_date: '{{ .Values.system.components.attendee_service.dues.latest_due_date }}'
      due_days: {{ .Values.system.components.attendee_service.dues.due_days }}
    birthday:
      earliest: '{{ .Values.system.components.attendee_service.birthday.earliest }}'
      latest: '{{ .Values.system.components.attendee_service.birthday.latest }}'
    additional_info_areas:
      {{- .Values.choices.additional_info_areas | toYaml | nindent 6 }}
    choices:
      flags:
        {{- .Values.choices.flags | toYaml | nindent 8 }}
      packages:
        {{- .Values.choices.packages | toYaml | nindent 8 }}
      options:
        {{- .Values.choices.options | toYaml | nindent 8 }}
    tshirtsizes:
{{- range .Values.choices.tshirtsizes }}
{{-   range $key, $value := . }}
      - {{ $key }}
{{-   end }}
{{- end }}
    spoken_languages:
{{- range .Values.choices.spoken_languages }}
{{-   range $key, $value := . }}
      - '{{ $key }}'
{{-   end }}
{{- end }}
    registration_languages:
{{- range .Values.system.registration_languages }}
{{-   range $key, $value := . }}
      - '{{ $key }}'
{{-   end }}
{{- end }}
    countries:
{{- range .Values.choices.countries }}
{{-   range $key, $value := . }}
      - '{{ $key }}'
{{-   end }}
{{- end }}

  auth-service-config: |
    # configuration file for auth-service
    service:
      name: 'Auth Service'
      # external url of my own "dropoff" endpoint. This must match the OAuth2 redirect_url setting on each client
      dropoff_endpoint_url: '{{ $public_base_url }}/authsrv/v1/dropoff'
      {{- with .Values.system.components.auth_service.error_url }}
      error_url: '{{ . }}'
      {{- end }}
    server:
      port: 8080
    security:
      oidc:
        id_token_cookie_name: '{{ .Values.system.components.auth_service.id_token_cookie_name }}'
        access_token_cookie_name: '{{ .Values.system.components.auth_service.access_token_cookie_name }}'
        relevant_groups:
          {{- if .Values.system.components.auth_service.admin_group_limit_to_identities }}
          {{ .Values.system.components.auth_service.admin_group_id }}:
          {{-   range .Values.system.components.auth_service.admin_group_limit_to_identities }}
            - '{{ . }}'
          {{-   end }}
          {{- else }}
          {{ .Values.system.components.auth_service.admin_group_id }}: []
          {{- end }}
          {{- range .Values.system.components.auth_service.other_group_ids }}
          {{ . }}: []
          {{- end }}
        {{- with .Values.system.components.auth_service.token_public_keys_PEM }}
        token_public_keys_PEM: {{- . | toYaml | nindent 8 }}
        {{- end }}
        {{- with .Values.system.components.auth_service.identity_provider.user_info_url }}
        user_info_url: '{{ . }}'
        {{- end }}
        user_info_cache_seconds: {{ .Values.system.components.auth_service.user_info_cache_seconds | default 10 }}
        {{- with .Values.system.components.auth_service.identity_provider.token_introspection_url }}
        token_introspection_url: '{{ . }}'
        {{- end }}
        {{- with .Values.system.components.auth_service.allowed_audience_in_tokens }}
        audience: '{{ . }}'
        {{- end }}
        {{- with .Values.system.components.auth_service.allowed_issuer_in_tokens }}
        issuer: '{{ . }}'
        {{- end }}
      cors:
        disable: {{ .Values.development.cors.disable }}
        {{- with .Values.development.cors.allow_origin }}
        allow_origin: '{{ . }}'
        {{- end }}
        insecure_cookies: {{ .Values.development.security.insecure_cookies }}
        disable_http_only_cookies: {{ .Values.development.security.disable_http_only_cookies }}
    logging:
      severity: {{ .Values.system.logging.severity }}
    identity_provider:
      authorization_endpoint: '{{ .Values.system.components.auth_service.identity_provider.authorization_endpoint }}'
      token_endpoint: '{{ .Values.system.components.auth_service.identity_provider.token_endpoint }}'
      end_session_endpoint: '{{ .Values.system.components.auth_service.identity_provider.end_session_endpoint }}'
      token_request_timeout: {{ .Values.system.components.auth_service.identity_provider.token_request_timeout }}
      auth_request_timeout: {{ .Values.system.components.auth_service.identity_provider.auth_request_timeout }}
    application_configs:
      registration-system:
        display_name: Registration System
        scope: '{{ .Values.system.components.auth_service.scope }} openid email groups profile'
        # client_id: '$REG_SECRET_OIDC_CLIENT_ID'
        # client_secret: '$REG_SECRET_OIDC_CLIENT_SECRET'
        default_dropoff_url: '{{ .Values.system.components.auth_service.default_dropoff_url }}'
        dropoff_url_pattern: '{{ .Values.system.components.auth_service.dropoff_url_pattern }}'
        cookie_name: '{{ .Values.system.components.auth_service.id_token_cookie_name }}'
        cookie_domain: '{{ .Values.system.components.auth_service.cookie_domain }}'
        cookie_path: '/{{ .Values.system.public_base_context | default "" }}'
        cookie_expiry: '{{ .Values.system.components.auth_service.cookie_expiry }}'

  mail-service-config: |
    # configuration file for mail-service
    server:
      port: 8080
    mail:
      log_only: {{ .Values.system.components.mail_service.log_only }}
      dev_mode: {{ .Values.system.components.mail_service.dev_mode }}
      {{- with .Values.system.components.mail_service.dev_mails }}
      dev_mails: {{ . | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.system.components.mail_service.add_auto_bcc }}
      add_auto_bcc: '{{ . }}'
      {{- end }}
      from: '{{ .Values.system.components.mail_service.from }}'
      # from_password: '$REG_SECRET_SMTP_PASSWORD' # or blank for no password
      smtp_host: '{{ .Values.system.components.mail_service.smtp_host }}'
      smtp_port: '{{ .Values.system.components.mail_service.smtp_port }}'
      {{- with .Values.system.components.mail_service.message_id_domain }}
      message_id_domain: '{{ . }}'
      {{- end }}
    database:
      use: '{{ .Values.system.database.use }}'
      {{- if eq .Values.system.database.use "mysql" }}
      username: '{{ .Values.system.database.username }}'
      # password: '$REG_SECRET_DB_PASSWORD'
      database: '{{ .Values.system.database.database }}'
      {{-   with .Values.system.database.parameters }}
      parameters:
        {{- range . }}
        - '{{ . }}'
        {{- end }}
      {{-   end }}
      {{- end }}
    security:
      fixed_token: {}
        # api: '$REG_SECRET_API_TOKEN'
      oidc:
        id_token_cookie_name: '{{ .Values.system.components.auth_service.id_token_cookie_name }}'
        access_token_cookie_name: '{{ .Values.system.components.auth_service.access_token_cookie_name }}'
        {{- with .Values.system.components.auth_service.token_public_keys_PEM }}
        token_public_keys_PEM: {{- . | toYaml | nindent 8 }}
        {{- end }}
        admin_group: '{{ .Values.system.components.auth_service.admin_group_id }}'
        {{- if .Values.system.components.auth_service.enable }}
        auth_service: '{{ .Values.system.components.auth_service.local_base_url }}'
        {{- end }}
        {{- with .Values.system.components.auth_service.allowed_audience_in_tokens }}
        audience: '{{ . }}'
        {{- end }}
        {{- with .Values.system.components.auth_service.allowed_issuer_in_tokens }}
        issuer: '{{ . }}'
        {{- end }}
      cors:
        disable: {{ .Values.development.cors.disable }}
        {{- with .Values.development.cors.allow_origin }}
        allow_origin: '{{ . }}'
        {{- end }}
    logging:
      severity: {{ .Values.system.logging.severity }}
      style: {{ .Values.system.logging.style }}

  payment-cncrd-adapter-config: |
    # configuration file for payment-cncrd-adapter
    service:
      name: 'Concardis Adapter'
      {{- if .Values.system.components.attendee_service.enable }}
      attendee_service: '{{ .Values.system.components.attendee_service.local_base_url }}'
      {{- end }}
      {{- if .Values.system.components.mail_service.enable }}
      mail_service: '{{ .Values.system.components.mail_service.local_base_url }}'
      {{- end }}
      {{- if .Values.system.components.payment_service.enable }}
      payment_service: '{{ .Values.system.components.payment_service.local_base_url }}'
      {{- end }}
      {{- if .Values.system.components.payment_cncrd_adapter.simulator }}
      public_url: '{{ $public_base_url }}/cncrdsrv'
      {{- else }}
      {{-   if ne .Values.system.components.payment_cncrd_adapter.concardis_downstream "" }}
      concardis_downstream: '{{ .Values.system.components.payment_cncrd_adapter.concardis_downstream }}'
      # concardis_api_secret: '$REG_SECRET_CONCARDIS_API_SECRET'
      {{-   end }}
      {{- end }}
      concardis_instance: '{{ .Values.system.components.payment_cncrd_adapter.concardis_instance }}'
      success_redirect: '{{ $public_base_url }}/app/register'
      failure_redirect: '{{ $public_base_url }}/app/register'
      transaction_id_prefix: '{{ .Values.system.components.payment_service.transaction_id_prefix }}'
    server:
      port: 8080
    logging:
      severity: {{ .Values.system.logging.severity }}
      full_requests: {{ .Values.system.components.payment_cncrd_adapter.log_full_requests }}
      {{- with .Values.system.components.payment_cncrd_adapter.error_notify_mail }}
      error_notify_mail: '{{ . }}'
      {{- end }}
    security:
      fixed_token: {}
        # api: '$REG_SECRET_API_TOKEN'
        # webhook: '$REG_SECRET_CONCARDIS_INCOMING_WEBHOOK_SECRET'
      cors:
        disable: {{ .Values.development.cors.disable }}
        {{- with .Values.development.cors.allow_origin }}
        allow_origin: '{{ . }}'
        {{- end }}
    database:
      use: '{{ .Values.system.database.use }}'
      {{- if eq .Values.system.database.use "mysql" }}
      username: '{{ .Values.system.database.username }}'
      # password: '$REG_SECRET_DB_PASSWORD'
      database: '{{ .Values.system.database.database }}'
      {{-   with .Values.system.database.parameters }}
      parameters:
        {{- range . }}
        - '{{ . }}'
        {{- end }}
      {{-   end }}
      {{- end }}
    invoice:
      title: '{{ .Values.system.components.payment_cncrd_adapter.invoice.title }}'
      description: '{{ .Values.system.components.payment_cncrd_adapter.invoice.description }}'
      purpose: '{{ .Values.system.components.payment_cncrd_adapter.invoice.purpose }}'

  payment-service-config: |
    # configuration file for payment-service
    service:
      name: 'Payment Service'
      {{- if .Values.system.components.attendee_service.enable }}
      attendee_service: '{{ .Values.system.components.attendee_service.local_base_url }}'
      {{- end }}
      provider_adapter: '{{ .Values.system.components.payment_cncrd_adapter.local_base_url }}'
      transaction_id_prefix: '{{ .Values.system.components.payment_service.transaction_id_prefix }}'
      allowed_currencies:
        - '{{ .Values.system.components.payment_service.currency }}'
      payment_default_comment:
        {{- with .Values.system.components.payment_service.payment_default_comment.credit }}
        credit: '{{ . }}'
        {{- end }}
        {{- with .Values.system.components.payment_service.payment_default_comment.transfer }}
        transfer: '{{ . }}'
        {{- end }}
      public_sepa_link_url: '{{ $public_base_url }}/{{ .Values.system.components.regsys_classic.context_path }}/page/sepa'
    server:
      port: 8080
      read_timeout_seconds: 30
      write_timeout_seconds: 30
      idle_timeout_seconds: 120
    database:
      use: '{{ .Values.system.database.use }}'
      {{- if eq .Values.system.database.use "mysql" }}
      username: '{{ .Values.system.database.username }}'
      # password: '$REG_SECRET_DB_PASSWORD'
      database: '{{ .Values.system.database.database }}'
      {{-   with .Values.system.database.parameters }}
      parameters:
        {{- range . }}
        - '{{ . }}'
        {{- end }}
      {{-   end }}
      {{- end }}
    security:
      fixed_token: {}
        # api: '$REG_SECRET_API_TOKEN'
      oidc:
        id_token_cookie_name: '{{ .Values.system.components.auth_service.id_token_cookie_name }}'
        access_token_cookie_name: '{{ .Values.system.components.auth_service.access_token_cookie_name }}'
        {{- with .Values.system.components.auth_service.token_public_keys_PEM }}
        token_public_keys_PEM: {{- . | toYaml | nindent 8 }}
        {{- end }}
        admin_group: '{{ .Values.system.components.auth_service.admin_group_id }}'
        {{- if .Values.system.components.auth_service.enable }}
        auth_service: '{{ .Values.system.components.auth_service.local_base_url }}'
        {{- end }}
        {{- with .Values.system.components.auth_service.allowed_audience_in_tokens }}
        audience: '{{ . }}'
        {{- end }}
        {{- with .Values.system.components.auth_service.allowed_issuer_in_tokens }}
        issuer: '{{ . }}'
        {{- end }}
      cors:
        disable: {{ .Values.development.cors.disable }}
        {{- with .Values.development.cors.allow_origin }}
        allow_origin: '{{ . }}'
        {{- end }}
    logging:
      severity: {{ .Values.system.logging.severity }}
      style: {{ .Values.system.logging.style }}

  room-service-config: |
    # configuration file for room-service
    service:
      {{- if .Values.system.components.attendee_service.enable }}
      attendee_service_url: '{{ .Values.system.components.attendee_service.local_base_url }}'
      {{- end }}
      {{- if .Values.system.components.auth_service.enable }}
      auth_service_url: '{{ .Values.system.components.auth_service.local_base_url }}'
      {{- end }}
      {{- if .Values.system.components.mail_service.enable }}
      mail_service_url: '{{ .Values.system.components.mail_service.local_base_url }}'
      {{- end }}
      join_link_base_url: '{{ .Values.system.components.room_service.join_link_base_url }}'
      max_group_size: {{ .Values.system.components.room_service.max_group_size }}
      {{- with .Values.system.components.room_service.group_flags }}
      group_flags: {{- . | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.system.components.room_service.room_flags }}
      room_flags: {{- . | toYaml | nindent 8 }}
      {{- end }}
    server:
      port: 8080
      read_timeout_seconds: 30
      write_timeout_seconds: 30
      idle_timeout_seconds: 120
    database:
      use: '{{ .Values.system.database.use }}'
      {{- if eq .Values.system.database.use "mysql" }}
      username: '{{ .Values.system.database.username }}'
      # password: '$REG_SECRET_DB_PASSWORD'
      database: '{{ .Values.system.database.database }}'
      {{-   with .Values.system.database.parameters }}
      parameters:
        {{- range . }}
        - '{{ . }}'
        {{- end }}
      {{-   end }}
      {{- end }}
    security:
      fixed_token: {}
        # api: '$REG_SECRET_API_TOKEN'
      oidc:
        id_token_cookie_name: '{{ .Values.system.components.auth_service.id_token_cookie_name }}'
        access_token_cookie_name: '{{ .Values.system.components.auth_service.access_token_cookie_name }}'
        {{- with .Values.system.components.auth_service.token_public_keys_PEM }}
        token_public_keys_PEM: {{- . | toYaml | nindent 8 }}
        {{- end }}
        admin_group: '{{ .Values.system.components.auth_service.admin_group_id }}'
        {{- if .Values.system.components.auth_service.enable }}
        auth_service: '{{ .Values.system.components.auth_service.local_base_url }}'
        {{- end }}
        {{- with .Values.system.components.auth_service.allowed_audience_in_tokens }}
        audience: '{{ . }}'
        {{- end }}
        {{- with .Values.system.components.auth_service.allowed_issuer_in_tokens }}
        issuer: '{{ . }}'
        {{- end }}
      cors:
        disable: {{ .Values.development.cors.disable }}
        {{- with .Values.development.cors.allow_origin }}
        allow_origin: '{{ . }}'
        {{- end }}
    logging:
      severity: {{ .Values.system.logging.severity }}
      style: {{ .Values.system.logging.style }}
    {{- with .Values.system.components.room_service.go_live }}
    go_live: {{- . | toYaml | nindent 6 }}
    {{- end }}

  HTTPD_CONF_PATH_PREFIX_NO_SLASHES: '{{ .Values.system.public_base_context }}'
  HTTPD_CONF_SERVER_NAME: '{{ .Values.ingress.host }}'
{{- if .Values.system.components.frontend.enable }}
  HTTPD_CONF_STATIC_DIR: 'reg-frontend'
{{- else }}
  HTTPD_CONF_STATIC_DIR: 'reg-frontend-disabled'
{{- end }}
